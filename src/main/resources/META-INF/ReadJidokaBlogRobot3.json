{"id":"ReadJidokaBlogRobot3","robotType":"ROBOT","mainClass":"com.novayre.jidoka.robot.tutorial.ReadJidokaBlogRobot3","actions":["init","createExcel","mi_create_excel","create_excel_apache_poi","escribir_excel","escribir_excel_apache_poi","openBrowser","navigate","extractPost","end"],"conditionalActions":["hasMoreItems"],"fieldLinks":[],"actionDetails":[{"id":"init","implementation":"/**\n\t * Initial action 'Init'.\n\t * \n\t * @throws Exception\n\t */\npublic void init() throws Exception {\n    // Initialization of the robot components\n    server = (IJidokaServer<?>) JidokaFactory.getServer();\n    windows = IJidokaRobot.getInstance(this);\n    // Default pause after typing or using the mouse\n    windows.typingPause(PAUSE);\n    windows.mousePause(PAUSE);\n    map.put(\"1\", new Object[] { \"NOMBRE\", \"EDAD\", \"SEXO\" });\n    map.put(\"2\", new Object[] { \"Pedro\", \"29\", \"M\" });\n    map.put(\"3\", new Object[] { \"Oscar\", \"26\", \"M\" });\n    map.put(\"4\", new Object[] { \"MarÃ­a\", \"23\", \"F\" });\n    numberOfItems = map.size();\n    server.info(\"size of map \" + map.size());\n}"},{"id":"createExcel","implementation":"/**\n\t * Action 'Create Excel'.\n\t * \n\t * @throws Exception\n\t */\npublic void createExcel() throws Exception {\n    /*\n\t\t * Get an instance of IExcel, one of the interfaces included in the\n\t\t * Data-Provider module.\n\t\t */\n    excel1 = IExcel.getExcelInstance(this);\n    // Build the complete path of the file.\n    String excel_file = Paths.get(server.getCurrentDir(), \"salida.xlsx\").toString();\n    // Create the Excel file from the scratch.\n    excel1.create(excel_file, EExcelType.XLSX);\n    /*\n\t\t * Add the excel to the list of files to upload to the server when the\n\t\t * robot execution ends.\n\t\t */\n    files.add(excel_file);\n    // Set the value for the first cell.\n    excel1.setCellValueByRef(new  CellReference(0, 0), \"TÃ­tulo del post\");\n    excel1.setCellValueByRef(new  CellReference(0, 1), \"Subtitulo del post\");\n}"},{"id":"mi_create_excel","implementation":"public void mi_create_excel() throws JidokaException, Exception {\n    //creando mi excel*************\n    String directorio_actual = server.getCurrentDir();\n    server.info(\"El directorio actual es :\" + directorio_actual);\n    //definiendo nombre unicopara mi excel\n    String name = String.valueOf(new  Date().getTime()) + \"xlsx\";\n    //cualquiera de las maneras que esta comentada se pueden usar\n    File file = Paths.get(directorio_actual, name).toFile();\n    //File file = new File(directorio_actual+ \"\\\\\" + name);\n    server.info(\"el fichero esta en \" + file.getAbsolutePath());\n    server.info(\"dentro de crear excel\");\n    //IExcel mi_exc=new IExcel\n    String excelPath = file.getAbsolutePath();\n    excel1 = IExcel.getExcelInstance(this);\n    String excel_file = Paths.get(server.getCurrentDir(), \"out.xlsx\").toString();\n    excel1.create(excel_file, EExcelType.XLSX);\n    if (excel1.createSheet(\"Hoja1\")) {\n        server.info(\"la hoja hoja ha sido creada stisfactoriamente\");\n        System.out.println(\"\");\n    } else {\n        server.info(\"no se creo la hoja en el libro\");\n    }\n    files.add(excel_file);\n}"},{"id":"create_excel_apache_poi","implementation":"public void create_excel_apache_poi() throws JidokaException, FileNotFoundException, IOException {\n    String directorio_actual = server.getCurrentDir();\n    //File file = Paths.get(directorio_actual, name).toFile();\n    String camino = directorio_actual + \"\\\\\" + \"excel_apache_poi.xlsx\";\n    server.info(\"ruta del fichero \" + camino);\n    file_poi = new  File(camino);\n    out = new  FileOutputStream(file_poi);\n    server.setNumberOfItems(datos_proceasar.length);\n    libro = new  XSSFWorkbook();\n    hoja = libro.createSheet(\"Informacion\");\n    dir = camino;\n}"},{"id":"escribir_excel","implementation":"public void escribir_excel() {\n    server.setNumberOfItems(datos_proceasar.length);\n    server.info(\"editando encabezado\");\n    server.info(\"si esta abierto \" + excel1.isOpen());\n    server.info(\"si es diferente de null \" + excel1.getWorkbook().getSheet(\"Hoja1\") != null);\n    if (excel1.isOpen() && excel1.getWorkbook().getSheet(\"Hoja1\") != null) {\n        server.info(\"dentro del if que me permite escribir en el excel\");\n        Row row = excel1.getSheet().createRow(0);\n        row.createCell(0, CellType.STRING).setCellValue(\"TÃ­tulo\");\n        row.createCell(1, CellType.STRING).setCellValue(\"Autor\");\n        row.createCell(2, CellType.STRING).setCellValue(\"Precio\");\n        row.createCell(3, CellType.STRING).setCellValue(\"Existencia\");\n    }\n}"},{"id":"escribir_excel_apache_poi","implementation":"public void escribir_excel_apache_poi() {\n    int row_id = currentItemIndex;\n    Object[] act = (Object[]) map.get(String.valueOf(row_id + 1));\n    row = hoja.createRow(row_id);\n    int cell_id = 0;\n    for (Object elemento : act) {\n        Cell cell = row.createCell(cell_id++);\n        cell.setCellValue((String) elemento);\n    }\n    server.info(\"contenido de las filas \" + act[0] + \"       \" + act[1] + \"       \" + act[2]);\n}"},{"id":"openBrowser","implementation":"public void openBrowser() throws Exception {\n    browser = IWebBrowserSupport.getInstance(this, windows);\n    setBrowser();\n    browser.initBrowser();\n    server.info(\"inicio el browser\");\n}"},{"id":"navigate","implementation":"public void navigate() throws Exception {\n    browser.navigate(HOME_URL);\n    checkJidokaBlogLoaded();\n    By loadMoreButton = By.cssSelector(\".pager_load_more .button_icon .button_label\");\n    while (true) {\n        List<WebElement> currentPagePostLinks = browser.getElements(By.cssSelector(\".post-more\"));\n        numberOfItems += currentPagePostLinks.size();\n        currentPagePostLinks.forEach(( link)->postLinks.add(link.getAttribute(\"href\")));\n        boolean morePosts = windows.waitFor(this).wait(3, \"Waiting for more posts to be loaded\", false, false, ()->browser.existsElement(loadMoreButton));\n        if (!morePosts) {\n            break;\n        }\n        WebElement element = browser.getElement(loadMoreButton);\n        browser.moveTo(element);\n        windows.clickOnCenter();\n        windows.getKeyboard().up(4).pause();\n        browser.clickOnElement(loadMoreButton);\n        windows.pause(5000);\n    }\n    browser.navigate(HOME_URL);\n    server.setNumberOfItems(numberOfItems);\n}"},{"id":"extractPost","implementation":"public void extractPost() throws Exception {\n    String title = browser.getText(By.cssSelector(\"h1.entry-title\"));\n    server.setCurrentItem(currentItemIndex, title);\n    excel.setCellValueByRef(new  CellReference(currentItemIndex, 0), title);\n    WebElement image_element = browser.getElement(By.cssSelector(\"img.wp-post-image\"));\n    String image = URI.create(image_element.getAttribute(HTML.Attribute.SRC.toString())).toASCIIString();\n    File file = File.createTempFile(\"jidoka\", String.format(\"post%s\", image.substring(image.lastIndexOf('.'))));\n    try (InputStream is = new  URL(image).openStream();\n        OutputStream os = new  FileOutputStream(file)) {\n        IOUtils.copy(is, os);\n    } catch (IOException e) {\n        server.error(String.format(\"Error getting image %s\", image), e);\n        server.setCurrentItemResultToWarn(e.getLocalizedMessage());\n        return;\n    }\n    files.add(file.getAbsolutePath());\n    server.setCurrentItemResultToOK();\n}"},{"id":"end","implementation":"public void end() throws Exception {\n}"}],"conditionalActionDetails":[{"id":"hasMoreItems","implementation":"public String hasMoreItems() throws Exception {\n    currentItemIndex++;\n    if (currentItemIndex >= numberOfItems) {\n        return \"no\";\n    }\n    return \"yes\";\n}"}]}